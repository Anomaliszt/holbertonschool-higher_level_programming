=============================
The ``1-my_list`` module
=============================

Using ``MyList``
---------------------

Import the class:

    >>> MyList = __import__('1-my_list').MyList

Now test it:

    >>> my_list = MyList()

    >>> my_list
    []

    >>> my_list.append(1)

    >>> my_list.append(4)

    >>> my_list.append(2)

    >>> my_list
    [1, 4, 2]

    >>> my_list.print_sorted()
    [1, 2, 4]

    >>> my_list
    [1, 4, 2]

    >>> my_list = MyList([3, 6, 2])

    >>> my_list
    [3, 6, 2]

    >>> my_list.print_sorted()
    [2, 3, 6]

    >>> my_list = MyList("hello")
    
    >>> my_list
    ['h', 'e', 'l', 'l', 'o']

    >>> my_list.print_sorted()
    ['e', 'h', 'l', 'l', 'o']

    >>> new_l = MyList()

    >>> new_l.print_sorted()
    []

    >>> my_list = MyList([1, 3, 3, 2])

    >>> my_list
    [1, 3, 3, 2]

    >>> my_list.print_sorted()
    [1, 2, 3, 3]

    >>> my_list = MyList([1, "string", 3])

    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'str' and 'int'

    >>> my_list = MyList(10)
    Traceback (most recent call last):
    ...
    TypeError: 'int' object is not iterable

    >>> big_list = MyList(range(100, 0, -1))

    >>> big_list.print_sorted()
    [1, 2, 3, ..., 100]

    >>> my_list = MyList([4, 1, 3])

    >>> my_list.print_sorted()
    [1, 3, 4]

    >>> my_list.append(0)

    >>> my_list
    [4, 1, 3, 0]

    >>> my_list.print_sorted()
    [0, 1, 3, 4]

    >>> sorted_list = MyList([1, 2, 3])

    >>> sorted_list.print_sorted()
    [1, 2, 3]

